{
    "swagger": "2.0",
    "info": {
        "description": "This is the API documentation for Foover.",
        "title": "Foover API",
        "termsOfService": "http://example.com/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.example.com/support",
            "email": "support@example.com"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/aggregated-scores": {
            "get": {
                "description": "Retrieves aggregated average scores for products across all session IDs.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "aggregation"
                ],
                "summary": "Get aggregated product scores",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetAggregatedScoresResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/sessions": {
            "post": {
                "description": "Generates a unique session ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sessions"
                ],
                "summary": "Create a new session",
                "parameters": [
                    {
                        "description": "Session creation request",
                        "name": "session",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/models.CreateSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.CreateSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/votes": {
            "post": {
                "description": "Stores or updates a product vote for a given session ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "votes"
                ],
                "summary": "Save or update a vote",
                "parameters": [
                    {
                        "description": "Vote object that needs to be added or updated",
                        "name": "vote",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SaveVoteRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.EmptyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/votes/{session_id}": {
            "get": {
                "description": "Retrieves existing votes for products for a given session ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "votes"
                ],
                "summary": "Get votes by session ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "The session ID",
                        "name": "session_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetVotesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateSessionRequest": {
            "type": "object"
        },
        "models.CreateSessionResponse": {
            "type": "object",
            "properties": {
                "session_id": {
                    "description": "The unique session ID\nRequired: true",
                    "type": "string"
                }
            }
        },
        "models.EmptyResponse": {
            "type": "object"
        },
        "models.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "Error message\nRequired: true",
                    "type": "string"
                }
            }
        },
        "models.GetAggregatedScoresResponse": {
            "type": "object",
            "properties": {
                "scores": {
                    "description": "List of aggregated product scores\nRequired: true",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ProductScore"
                    }
                }
            }
        },
        "models.GetVotesResponse": {
            "type": "object",
            "properties": {
                "votes": {
                    "description": "List of votes\nRequired: true",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Vote"
                    }
                }
            }
        },
        "models.ProductScore": {
            "type": "object",
            "properties": {
                "avgScore": {
                    "type": "number"
                },
                "productID": {
                    "type": "string"
                },
                "voteCount": {
                    "type": "integer"
                }
            }
        },
        "models.SaveVoteRequest": {
            "type": "object",
            "properties": {
                "product_id": {
                    "description": "The product ID\nRequired: true",
                    "type": "string"
                },
                "score": {
                    "description": "The score (e.g., rating from 1 to 5)\nRequired: true",
                    "type": "integer"
                },
                "session_id": {
                    "description": "The session ID\nRequired: true",
                    "type": "string"
                }
            }
        },
        "models.Vote": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "productID": {
                    "type": "string"
                },
                "score": {
                    "type": "integer"
                },
                "sessionID": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        }
    }
}